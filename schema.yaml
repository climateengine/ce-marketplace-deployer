x-google-marketplace:
  schemaVersion: v2

  applicationApiVersion: v1beta1
  # The published version is required and MUST match the tag
  # of the deployer image
  publishedVersion: '1.0.4'
  publishedVersionMetadata:
    releaseNote: >-
      A first release.
  images:
    ce-deployer:
      properties:
        ce_deployer_image:
          type: FULL

  clusterConstraints:
    assistedClusterCreation:
      type: DISABLED
      creationGuidance: >-
        The install cluster must:
          - Be GKE Standard (not Autopilot)
          - Have at least one node with machine type "e2-medium" or larger

        Additional requirements:
          - Cluster must contain a Kubernetes Secret containing the JSON key of a Service Account with Owner role
          - OR a preconfigured Cloud SQL and GCS bucket.

        For more detailed information see: https://github.com/climateengine/ce-marketplace-deployer#readme

form:
- widget: help
  description: >-
    <h2>Additional Requirements</h2>
    In addition to GKE, Climate Engine requires access to a Postgres Cloud SQL instance, and a GCS bucket.
    These can be created automatically or manually.

    <h3>Automatic Creation</h3>
    If you would like these to be created automatically, the GKE instance must be preconfigure with a
    Kubernetes secret containing the JSON credentials of a Service Account with role/owner permissions.
    This can be done by running the following command:
    <p>kubectl create secret generic google-cloud-key --from-file=key.json=PATH-TO-KEY-FILE.json</p>
    <b>Note:</b> the key or filename within the secret <em>must</em> be named key.json as shown in the
    command above.

    <h3>Manual Creation</h3>
    For more advanced installations, you may choose to manually create the Cloud SQL and GCS bucket.
    <p>Cloud SQL instance must be accessible from within the GKE cluster, and provisioned with a database,
    and a user with read/write permissions to the database.</p>
    <p>The Service Account running Climate Engine must have full read/write permissions to the GCS bucket.</p>

    <h2>Configuration Help</h2>

    <h3>Create GCS bucket</h3>
    <b>Required.</b> Whether Climate Engine should automatically create a new Google Cloud Storage bucket.
    If not automatically creating the bucket, the GCS bucket must already exist and the GKE Service Account
    must have full read/write permissions.

    <h3>GCS bucket name</h3>
    <b>Required for manually created bucket.</b> Name of GCS bucket for Climate Engine assets.
    If automatically creating the bucket and left blank, the bucket name is autogenerated.

    <h3>Create Cloud SQL instance</h3>
    <b>Required.</b> Whether Climate Engine should automatically create a new Cloud SQL instance.
    If not automatically creating the Cloud SQL instance, it must already exist, be accessible from within GKE,
    and the username, password, database, and hostname must be specified.

    <h3>Cloud SQL instance name</h3>
    Optional. Name of Cloud SQL instance to create. Only used if creating new Cloud SQL instance.
    Autogenerated if not specified.

    <h3>Cloud SQL unique suffix</h3>
    Optional. Used to guarantee unique Cloud SQL instance name.
    Only used if creating new Cloud SQL instance and Cloud SQL instance name is not given.
    Autogenerated to a random suffix if not specified.

    <h3>SQL hostname</h3>
    <b>Required for manually created Cloud SQL.</b> Hostname/IP address of Cloud SQL instance.
    This can be a public or private IP as long as it is accessible from within GKE. Remember to
    add the GKE network to "authorized networks" in Cloud SQL. If using Cloud SQL Proxy,
    you must manually configure and deploy this to GKE before Climate Engine.
    <p><b>Must not be set if automatically creating Cloud SQL</b></p>


    <h3>SQL database</h3>
    <b>Required for manually created Cloud SQL.</b> Database for Climate Engine to use within
    Cloud SQL.  If Cloud SQL instance is being created automatically, the database will be automatically
    created as well.

    <h3>SQL username</h3>
    <b>Required for manually created Cloud SQL.</b> Username for Climate Engine to use when accessing
    Cloud SQL.  If Cloud SQL instance is being created automatically, the user will be automatically
    created as well.

    <h3>SQL password</h3>
    <b>Required for manually created Cloud SQL.</b> Password for Climate Engine to use when accessing
    Cloud SQL. If Cloud SQL instance is being created automatically, this can be manually specified,
    or left blank and it will be autogenerated (recommended).

    <h3>Kubernetes Secret SA json</h3>
    <b>Required for automatic creation.</b> This is the name of the Kubernetes Secret containing the
    JSON credentials of a GCP Service Account with roles/owner permissions. This Service Account will be
    used to create the new resources.
    <p><i>Important:</i> This this Kubernetes secret must already exist on the GKE cluster, and the JSON
    credential must be stored in a key named <i>key.json</i>. This can be created with the following command:</p>
    <p>kubectl create secret generic google-cloud-key --from-file=key.json=PATH-TO-KEY-FILE.json</p>


properties:
  app_name:
    type: string
    x-google-marketplace:
      type: NAME

  namespace:
    type: string
    x-google-marketplace:
      type: NAMESPACE

  ce-billing-agent.reporting_secret:
    type: string
    default: "fake-reporting-secret"
    x-google-marketplace:
      type: REPORTING_SECRET

  # Create new GCS Bucket?
  ce-infra-deployer.bucket_create_new:
    type: boolean
    title: "Create GCS bucket"
    description: >-
      Whether to automatically create a new cloud storage bucket for Climate Engine assets.
      If not creating new GCS bucket, GCS bucket must already exist and GKE Service Account must have read/write permissions.
    default: true

  global.bucket_name:
    title: "GCS bucket name"
    description: >-
      Name of GCS bucket for Climate Engine assets. Autogenerated if not specified.
    type: string
    default: ""

  # Create new Cloud SQL?
  ce-infra-deployer.sql_create_new:
    type: boolean
    title: "Create Cloud SQL instance"
    description: >-
      Whether to automatically create a new Cloud SQL instance.
    default: true

  ce-infra-deployer.sql_instance_name:
    title: "Cloud SQL instance name"
    description: >-
      Optional. Name of Cloud SQL instance to create. Only used if creating new Cloud SQL instance.
    type: string
    default: ""

  ce-infra-deployer.sql_suffix:
    title: "Cloud SQL unique suffix"
    description: >-
      Optional. Used to guarantee unique Cloud SQL instance name.
    type: string
    x-google-marketplace:
      type: GENERATED_PASSWORD
      generatedPassword:
        length: 8
        includeSymbols: False
        base64: False

  global.postgres.host:
    title: "SQL hostname"
    description: >-
      Required for manual configuration.
    type: string
    default: ""

  global.postgres.dbname:
    title: "SQL database"
    description: >-
      Required for manual configuration.
    type: string
    default: ""

  global.postgres.user:
    title: "SQL username"
    description: >-
      Required for manual configuration.
    type: string
    default: ""

  global.postgres.password:
    title: "SQL password"
    description: >-
      Required for manual configuration. Automatically generated if blank.
    type: string
    x-google-marketplace:
      type: GENERATED_PASSWORD
      generatedPassword:
        length: 10
        includeSymbols: False
        base64: False

  ce-infra-deployer.sa_secret_name:
    title: "Kubernetes Secret SA json"
    description: >-
      Required for automatic configuration. See detailed instructions.
    type: string
    default: "google-cloud-key"


required:
  - app_name
  - namespace
  - ce-billing-agent.reporting_secret
  - ce-infra-deployer.bucket_create_new
  - global.bucket_name
  - ce-infra-deployer.sql_create_new
  - ce-infra-deployer.sql_instance_name
  - ce-infra-deployer.sql_suffix
  - global.postgres.host
  - global.postgres.dbname
  - global.postgres.user
  - global.postgres.password
  - ce-infra-deployer.sa_secret_name
